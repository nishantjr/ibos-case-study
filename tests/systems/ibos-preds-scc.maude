set include BOOL off .

fmod IBOS-PREDS-SCC is
  sort Bool? . --- used for partially defined Boolean functions
  sort Bool  .
  subsort Bool < Bool? .
  sort Pred .
  sorts Nat NzNat .
  subsorts NzNat < Nat .
  sort MaybeProcessId  .
  sort MaybePipeId     .
  sort MaybeConcPipeId .
  sort MaybeConcNetProcId .
  sort MaybeConcWebProcId .
  sort NullProcId      .
  sort ProcessId       .  **** Set of all process ids
  sort AbsProcId       .
  sort ConcProcId      .
  sort PipeId          .  **** processes which can act like pipes
  sort NonPipeId       .  **** Set of non-pipe processes
  sort NetProcId       .  **** abstract/concrete network procs/webapps
  sort WebProcId       .
  sort AbsPipeId       .
  sort AbsNetProcId    .
  sort AbsWebProcId    .
  sort ConcPipeId      .
  sort ConcNetProcId   .
  sort ConcWebProcId   .
  sort UIId            .
  sort NonNetPipeId    .  **** processes which are pipes and not networks
  sort NonWebPipeId    .  **** processes which are pipes and not webapps
  subsorts NullProcId < MaybeConcNetProcId MaybeConcWebProcId < MaybeConcPipeId < MaybePipeId < MaybeProcessId .
  subsorts  ProcessId    <     MaybeProcessId .
  subsorts     PipeId    <        MaybePipeId .
  subsorts ConcPipeId    <    MaybeConcPipeId .
  subsorts ConcNetProcId < MaybeConcNetProcId .
  subsorts ConcWebProcId < MaybeConcWebProcId .
  subsorts AbsProcId ConcProcId < ProcessId .
  subsorts PipeId    NonPipeId  < ProcessId .
  subsorts ConcPipeId NonPipeId < ConcProcId .
  subsorts AbsPipeId            < AbsProcId  .
  subsorts AbsPipeId ConcPipeId NetProcId WebProcId < PipeId .
  subsorts UIId ConcNetProcId ConcWebProcId < ConcPipeId .
  subsorts AbsNetProcId AbsWebProcId        < AbsPipeId  .
  subsorts ConcNetProcId AbsNetProcId       < NetProcId .
  subsorts ConcWebProcId AbsWebProcId       < WebProcId .
  subsorts UIId AbsWebProcId WebProcId      < NonNetPipeId < PipeId .
  subsorts UIId AbsNetProcId NetProcId      < NonWebPipeId < PipeId .
  sorts Object EmptyConfiguration NeConfiguration Configuration State .
  sorts Attribute EmptyAttributeSet NeAttributeSet AttributeSet .
  subsorts Object < NeConfiguration < Configuration .
  subsort  EmptyConfiguration < Configuration .
  subsorts Attribute < NeAttributeSet < AttributeSet .
  subsort  EmptyAttributeSet < AttributeSet .
  sorts Label MaybeLabel .
  subsorts Label < MaybeLabel .
  sort LabelList .
  subsort Label < LabelList .
  sort LabelSet .
  subsorts Label < LabelSet .
  sorts MsgType Message Message? .
  subsort Message < Message? .
  sort MessageList MaybeMessageList .
  subsort Message < MessageList < MaybeMessageList .
  sort Policy .
  sort PolicySet .
  subsort Policy < PolicySet .
  sorts WebProcInfo WebProcInfoSet .
  subsorts WebProcInfo < WebProcInfoSet .
  sorts NetProcInfo NetProcInfoSet .
  subsorts NetProcInfo < NetProcInfoSet .

  op false : -> Bool [ctor metadata "11" ] .
  op true  : -> Bool [ctor metadata "12" ] .
  op tt : -> Pred [ctor metadata "10"] .
  op 0   : -> Nat             [ctor metadata "0"] .
  op 1   : -> NzNat           [ctor metadata "16"] .
  op _+_ : NzNat Nat -> NzNat [ctor assoc comm id: 0 metadata "17"] .
  op _+_ : Nat   Nat -> Nat   [ctor ditto metadata "17"] .
  op none      :     -> NullProcId [ctor metadata "24"] .
  op kernel    :     -> NonPipeId [ctor metadata "25"] .
  op display   :     -> NonPipeId [ctor metadata "31"] .
  op nic       :     -> NonPipeId [ctor metadata "32"] .
  op webappmgr :     -> NonPipeId [ctor metadata "33"] .
  op webapp    :     -> AbsWebProcId  [ctor metadata "26"] .
  op webapp    : Nat -> ConcWebProcId [ctor metadata "27"] .
  op network   :     -> AbsNetProcId  [ctor metadata "28"] .
  op network   : Nat -> ConcNetProcId [ctor metadata "29"] .
  op ui        :     -> UIId          [ctor metadata "30"] .
  op <_|_> : ConcProcId AttributeSet               -> Object             [ctor metadata "35"] .
  op _,_   : AttributeSet AttributeSet             -> AttributeSet       [ctor assoc comm id: none metadata "36"] .
  op _,_   : AttributeSet NeAttributeSet           -> NeAttributeSet     [ctor ditto metadata "36"] .
  op _,_   : EmptyAttributeSet EmptyAttributeSet   -> EmptyAttributeSet  [ctor ditto metadata "36"] .
  op none  :                                       -> EmptyAttributeSet  [ctor metadata "1"] .
  op __    : Configuration Configuration           -> Configuration      [ctor assoc comm id: none metadata "37"] .
  op __    : NeConfiguration Configuration         -> NeConfiguration    [ctor ditto metadata "37"] .
  op __    : EmptyConfiguration EmptyConfiguration -> EmptyConfiguration [ctor ditto metadata "37"] .
  op none  :                                       -> EmptyConfiguration [ctor metadata "2"] .
  op {_}   : Configuration                         -> State              [ctor metadata "38"] .
  op nolabel     :     -> MaybeLabel [ctor metadata "39"] .
  op about-blank :     -> Label      [ctor metadata "40"] .
  op url         : Nat -> Label      [ctor metadata "41"] .
  op mtLL : -> LabelList [ctor metadata "3"] .
  op _;_ : LabelList LabelList -> LabelList   [ctor assoc id: mtLL metadata "45"] .
  op _&_  : LabelSet LabelSet -> LabelSet [ctor assoc comm id: mtLS metadata "46"] .
  op mtLS :                   -> LabelSet [ctor metadata "6"] .
  op none : -> Message? [ctor metadata "47"] .
  op MSG-NEW-URL    : -> MsgType [ctor metadata "48"] . --- creates a new web app with given URL
  op MSG-FETCH-URL  : -> MsgType [ctor metadata "49"] . --- tells network to fetch data for given URL
  op MSG-RETURN-URL : -> MsgType [ctor metadata "50"] . --- stores data that was fetched from internet by MSG-FETCH-URL
  op MSG-SWITCH-TAB : -> MsgType [ctor metadata "51"] . --- causes displayed tab to be switched
  op msg  : PipeId PipeId MsgType Label -> Message [ctor metadata "52"] .
  op nolist : -> MaybeMessageList [ctor metadata "4"] .
  op mt     : -> MessageList [ctor metadata "5"] .
  op _@_    : MessageList MessageList -> MessageList [ctor assoc id: mt metadata "54"] .
  op fromKernel : MessageList -> Attribute [ctor metadata "55"] .
  op toKernel   : MessageList -> Attribute [ctor metadata "56"] .
  op nextWPN : Nat -> Attribute [ctor metadata "57"] .
  op rendered : Label -> Attribute [ctor metadata "58"] .
  op URL : Label -> Attribute [ctor metadata "59"] .
  op loading : Bool -> Attribute [ctor metadata "60"] .
  op returnTo : ConcPipeId -> Attribute [ctor metadata "61"] .
  op in       : LabelList  -> Attribute [ctor metadata "62"] .
  op out      : LabelList  -> Attribute [ctor metadata "63"] .
  op mem-in  : MaybeLabel -> Attribute [ctor metadata "65"] .
  op mem-out : MaybeLabel -> Attribute [ctor metadata "64"] .
  op nic-in  : LabelList -> Attribute [ctor metadata "67"] .
  op nic-out : LabelSet  -> Attribute [ctor metadata "66"] .
  op mtPS :                       -> PolicySet [ctor metadata "7"] .
  op _,ps_  : PolicySet PolicySet -> PolicySet [ctor assoc comm id: mtPS metadata "68"] .
  op msgPolicy        : PolicySet             -> Attribute [ctor metadata "69"] .  **** make the policylist an attribute with this wrapper
  op policy           : PipeId PipeId MsgType -> Policy    [ctor metadata "70"] .  **** a policy is a sender Id, receiver Id and MsgType (only PipeProcs can communicate with kernel)
  op nextNPN          : Nat                   -> Attribute [ctor metadata "71"] .  **** the next available proc id for a network proc
  op handledCurrently : Message?              -> Attribute [ctor metadata "72"] .  **** the message currently handled by the kernel
  op pi        : ConcWebProcId Label           -> WebProcInfo    [ctor metadata "73"] .
  op mtWPIS    :                               -> WebProcInfoSet [ctor metadata "8"] .
  op _,wp_     : WebProcInfoSet WebProcInfoSet -> WebProcInfoSet [ctor assoc comm id: mtWPIS metadata "74"] .
  op weblabels : WebProcInfoSet                -> Attribute      [ctor metadata "75"] .
  op pi        : ConcNetProcId Label Label     -> NetProcInfo    [ctor metadata "76"] .
  op mtNPIS    :                               -> NetProcInfoSet [ctor metadata "9"] .
  op _,np_     : NetProcInfoSet NetProcInfoSet -> NetProcInfoSet [ctor assoc comm id: mtNPIS metadata "77"] .
  op netlabels : NetProcInfoSet                -> Attribute      [ctor metadata "78"] .
  op displayedTopBar  : Label               -> Attribute [ctor metadata "79"] . **** kernel-owned address bar - part of the 'secure' UI
  op activeWebapp     : MaybeConcWebProcId  -> Attribute [ctor metadata "80"] . **** display memory modeled as an object.
  op displayedContent : Label               -> Attribute [ctor metadata "81"] . **** label of the things being displayed as an attribute of that object
  --- 17. Generalize typing of returnTo(), rendered(), fromKernel(), and toKernel() attributes (used for attribute canonicalization)
  op returnTo   : MaybeConcPipeId  -> Attribute [ctor metadata "61"] .
  op rendered   : MaybeLabel       -> Attribute [ctor metadata "58"] .
  op fromKernel : MaybeMessageList -> Attribute [ctor metadata "55"] .
  op toKernel   : MaybeMessageList -> Attribute [ctor metadata "56"] .
  op nextWPN : Nat -> Attribute [ctor metadata "57"] .

  var A A' : Attribute . var AS AS' : AttributeSet .

  op _!a  : AttributeSet -> AttributeSet [metadata "99"] .
  op _!!a : Attribute -> Attribute .
  eq (A,AS)  !a = (A !!a),(AS !a) .
  eq none    !a = none .
  eq (AS !a) !a = AS !a .

  eq (fromKernel      (X:MaybeMessageList)  ) !!a = fromKernel(mt)                .
  eq (toKernel        (X:MaybeMessageList)  ) !!a = toKernel(mt)                  .
  eq (nextWPN         (X:Nat)               ) !!a = nextWPN(0)                    .
  eq (rendered        (X:MaybeLabel)        ) !!a = rendered(about-blank)         .
  eq (URL             (X:Label)             ) !!a = URL(about-blank)              .
  eq (loading         (X:Bool)              ) !!a = loading(true)                 .
  eq (returnTo        (X:MaybeConcPipeId)   ) !!a = returnTo(ui)                  .
  eq (in              (X:LabelList)         ) !!a = in(mtLL)                      .
  eq (out             (X:LabelList)         ) !!a = out(mtLL)                     .
  eq (mem-in          (X:MaybeLabel)        ) !!a = mem-in(nolabel)               .
  eq (mem-out         (X:MaybeLabel)        ) !!a = mem-out(nolabel)              .
  eq (nic-in          (X:LabelList)         ) !!a = nic-in(mtLL)                  .
  eq (nic-out         (X:LabelSet)          ) !!a = nic-out(mtLS)                 .
  eq (msgPolicy       (X:PolicySet)         ) !!a = msgPolicy(mtPS)               .
  eq (nextNPN         (X:Nat)               ) !!a = nextNPN(0)                    .
  eq (handledCurrently(X:Message?)          ) !!a = handledCurrently(none)        .
  eq (weblabels       (X:WebProcInfoSet)    ) !!a = weblabels(mtWPIS)             .
  eq (netlabels       (X:NetProcInfoSet)    ) !!a = netlabels(mtNPIS)             .
  eq (displayedTopBar (X:Label)             ) !!a = displayedTopBar(about-blank)  .
  eq (displayedContent(X:Label)             ) !!a = displayedContent(about-blank) .
  eq (activeWebapp    (X:MaybeConcWebProcId)) !!a = activeWebapp(webapp(0))       .

  var P : ConcProcId . var C : Configuration .

  op _!c : Configuration -> Configuration       [metadata "118"] .
  eq (< P | AS > C) !c = < P | AS !a > (C !c) .
  eq none          !c = none .

  op _~a_ : Attribute Attribute -> Bool [comm metadata "100"] .
  eq fromKernel      (X:MaybeMessageList) ~a fromKernel      (Y:MaybeMessageList) = true [variant] .
  eq toKernel        (X:MaybeMessageList) ~a toKernel        (Y:MaybeMessageList) = true [variant] .
  eq nextWPN         (X:Nat)              ~a nextWPN         (Y:Nat)              = true [variant] .
  eq rendered        (X:MaybeLabel)       ~a rendered        (Y:MaybeLabel)       = true [variant] .
  eq URL             (X:Label)            ~a URL             (Y:Label)            = true [variant] .
  eq loading         (X:Bool)             ~a loading         (Y:Bool)             = true [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a returnTo        (Y:MaybeConcPipeId)  = true [variant] .
  eq in              (X:LabelList)        ~a in              (Y:LabelList)        = true [variant] .
  eq out             (X:LabelList)        ~a out             (Y:LabelList)        = true [variant] .
  eq mem-in          (X:MaybeLabel)       ~a mem-in          (Y:MaybeLabel)       = true [variant] .
  eq mem-out         (X:MaybeLabel)       ~a mem-out         (Y:MaybeLabel)       = true [variant] .
  eq nic-in          (X:LabelList)        ~a nic-in          (Y:LabelList)        = true [variant] .
  eq nic-out         (X:LabelSet)         ~a nic-out         (Y:LabelSet)         = true [variant] .
  eq msgPolicy       (X:PolicySet)        ~a msgPolicy       (Y:PolicySet)        = true [variant] .
  eq nextNPN         (X:Nat)              ~a nextNPN         (Y:Nat)              = true [variant] .
  eq handledCurrently(X:Message?)         ~a handledCurrently(Y:Message?)         = true [variant] .
  eq weblabels       (X:WebProcInfoSet)   ~a weblabels       (Y:WebProcInfoSet)   = true [variant] .
  eq netlabels       (X:NetProcInfoSet)   ~a netlabels       (Y:NetProcInfoSet)   = true [variant] .
  eq displayedTopBar (X:Label)            ~a displayedTopBar (Y:Label)            = true [variant] .
  eq displayedContent(X:Label)            ~a displayedContent(Y:Label)            = true [variant] .
  eq activeWebapp    (X:MaybeConcWebProcId)        ~a activeWebapp    (Y:MaybeConcWebProcId)        = true [variant] .

  eq fromKernel      (X:MaybeMessageList) ~a toKernel        (Y:MaybeMessageList) = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a nextWPN         (Y:Nat)              = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a rendered        (Y:MaybeLabel)       = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a URL             (Y:Label)            = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a loading         (Y:Bool)             = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a in              (Y:LabelList)        = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a out             (Y:LabelList)        = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a nic-in          (Y:LabelList)        = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a nextNPN         (Y:Nat)              = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a handledCurrently(Y:Message?)         = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a displayedTopBar (Y:Label)            = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a displayedContent(Y:Label)            = false [variant] .
  eq fromKernel      (X:MaybeMessageList) ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq toKernel        (X:MaybeMessageList) ~a nextWPN         (Y:Nat)              = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a rendered        (Y:MaybeLabel)       = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a URL             (Y:Label)            = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a loading         (Y:Bool)             = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a in              (Y:LabelList)        = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a out             (Y:LabelList)        = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a nic-in          (Y:LabelList)        = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a nextNPN         (Y:Nat)              = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a handledCurrently(Y:Message?)         = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a displayedTopBar (Y:Label)            = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a displayedContent(Y:Label)            = false [variant] .
  eq toKernel        (X:MaybeMessageList) ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq nextWPN         (X:Nat)              ~a rendered        (Y:MaybeLabel)       = false [variant] .
  eq nextWPN         (X:Nat)              ~a URL             (Y:Label)            = false [variant] .
  eq nextWPN         (X:Nat)              ~a loading         (Y:Bool)             = false [variant] .
  eq nextWPN         (X:Nat)              ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq nextWPN         (X:Nat)              ~a in              (Y:LabelList)        = false [variant] .
  eq nextWPN         (X:Nat)              ~a out             (Y:LabelList)        = false [variant] .
  eq nextWPN         (X:Nat)              ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq nextWPN         (X:Nat)              ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq nextWPN         (X:Nat)              ~a nic-in          (Y:LabelList)        = false [variant] .
  eq nextWPN         (X:Nat)              ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq nextWPN         (X:Nat)              ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq nextWPN         (X:Nat)              ~a nextNPN         (Y:Nat)              = false [variant] .
  eq nextWPN         (X:Nat)              ~a handledCurrently(Y:Message?)         = false [variant] .
  eq nextWPN         (X:Nat)              ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq nextWPN         (X:Nat)              ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq nextWPN         (X:Nat)              ~a displayedTopBar (Y:Label)            = false [variant] .
  eq nextWPN         (X:Nat)              ~a displayedContent(Y:Label)            = false [variant] .
  eq nextWPN         (X:Nat)              ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq rendered        (X:MaybeLabel)       ~a URL             (Y:Label)            = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a loading         (Y:Bool)             = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a in              (Y:LabelList)        = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a out             (Y:LabelList)        = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a nic-in          (Y:LabelList)        = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a nextNPN         (Y:Nat)              = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a handledCurrently(Y:Message?)         = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a displayedTopBar (Y:Label)            = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a displayedContent(Y:Label)            = false [variant] .
  eq rendered        (X:MaybeLabel)       ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq URL             (X:Label)            ~a loading         (Y:Bool)             = false [variant] .
  eq URL             (X:Label)            ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq URL             (X:Label)            ~a in              (Y:LabelList)        = false [variant] .
  eq URL             (X:Label)            ~a out             (Y:LabelList)        = false [variant] .
  eq URL             (X:Label)            ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq URL             (X:Label)            ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq URL             (X:Label)            ~a nic-in          (Y:LabelList)        = false [variant] .
  eq URL             (X:Label)            ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq URL             (X:Label)            ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq URL             (X:Label)            ~a nextNPN         (Y:Nat)              = false [variant] .
  eq URL             (X:Label)            ~a handledCurrently(Y:Message?)         = false [variant] .
  eq URL             (X:Label)            ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq URL             (X:Label)            ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq URL             (X:Label)            ~a displayedTopBar (Y:Label)            = false [variant] .
  eq URL             (X:Label)            ~a displayedContent(Y:Label)            = false [variant] .
  eq URL             (X:Label)            ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq loading         (X:Bool)             ~a returnTo        (Y:MaybeConcPipeId)  = false [variant] .
  eq loading         (X:Bool)             ~a in              (Y:LabelList)        = false [variant] .
  eq loading         (X:Bool)             ~a out             (Y:LabelList)        = false [variant] .
  eq loading         (X:Bool)             ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq loading         (X:Bool)             ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq loading         (X:Bool)             ~a nic-in          (Y:LabelList)        = false [variant] .
  eq loading         (X:Bool)             ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq loading         (X:Bool)             ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq loading         (X:Bool)             ~a nextNPN         (Y:Nat)              = false [variant] .
  eq loading         (X:Bool)             ~a handledCurrently(Y:Message?)         = false [variant] .
  eq loading         (X:Bool)             ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq loading         (X:Bool)             ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq loading         (X:Bool)             ~a displayedTopBar (Y:Label)            = false [variant] .
  eq loading         (X:Bool)             ~a displayedContent(Y:Label)            = false [variant] .
  eq loading         (X:Bool)             ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq returnTo        (X:MaybeConcPipeId)  ~a in              (Y:LabelList)        = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a out             (Y:LabelList)        = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a nic-in          (Y:LabelList)        = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a nextNPN         (Y:Nat)              = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a handledCurrently(Y:Message?)         = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a displayedTopBar (Y:Label)            = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a displayedContent(Y:Label)            = false [variant] .
  eq returnTo        (X:MaybeConcPipeId)  ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq in              (X:LabelList)        ~a out             (Y:LabelList)        = false [variant] .
  eq in              (X:LabelList)        ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq in              (X:LabelList)        ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq in              (X:LabelList)        ~a nic-in          (Y:LabelList)        = false [variant] .
  eq in              (X:LabelList)        ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq in              (X:LabelList)        ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq in              (X:LabelList)        ~a nextNPN         (Y:Nat)              = false [variant] .
  eq in              (X:LabelList)        ~a handledCurrently(Y:Message?)         = false [variant] .
  eq in              (X:LabelList)        ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq in              (X:LabelList)        ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq in              (X:LabelList)        ~a displayedTopBar (Y:Label)            = false [variant] .
  eq in              (X:LabelList)        ~a displayedContent(Y:Label)            = false [variant] .
  eq in              (X:LabelList)        ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq out             (X:LabelList)        ~a mem-in          (Y:MaybeLabel)       = false [variant] .
  eq out             (X:LabelList)        ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq out             (X:LabelList)        ~a nic-in          (Y:LabelList)        = false [variant] .
  eq out             (X:LabelList)        ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq out             (X:LabelList)        ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq out             (X:LabelList)        ~a nextNPN         (Y:Nat)              = false [variant] .
  eq out             (X:LabelList)        ~a handledCurrently(Y:Message?)         = false [variant] .
  eq out             (X:LabelList)        ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq out             (X:LabelList)        ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq out             (X:LabelList)        ~a displayedTopBar (Y:Label)            = false [variant] .
  eq out             (X:LabelList)        ~a displayedContent(Y:Label)            = false [variant] .
  eq out             (X:LabelList)        ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq mem-in          (X:MaybeLabel)       ~a mem-out         (Y:MaybeLabel)       = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a nic-in          (Y:LabelList)        = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a nextNPN         (Y:Nat)              = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a handledCurrently(Y:Message?)         = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a displayedTopBar (Y:Label)            = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a displayedContent(Y:Label)            = false [variant] .
  eq mem-in          (X:MaybeLabel)       ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq mem-out         (X:MaybeLabel)       ~a nic-in          (Y:LabelList)        = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a nextNPN         (Y:Nat)              = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a handledCurrently(Y:Message?)         = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a displayedTopBar (Y:Label)            = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a displayedContent(Y:Label)            = false [variant] .
  eq mem-out         (X:MaybeLabel)       ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq nic-in          (X:LabelList)        ~a nic-out         (Y:LabelSet)         = false [variant] .
  eq nic-in          (X:LabelList)        ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq nic-in          (X:LabelList)        ~a nextNPN         (Y:Nat)              = false [variant] .
  eq nic-in          (X:LabelList)        ~a handledCurrently(Y:Message?)         = false [variant] .
  eq nic-in          (X:LabelList)        ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq nic-in          (X:LabelList)        ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq nic-in          (X:LabelList)        ~a displayedTopBar (Y:Label)            = false [variant] .
  eq nic-in          (X:LabelList)        ~a displayedContent(Y:Label)            = false [variant] .
  eq nic-in          (X:LabelList)        ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq nic-out         (X:LabelSet)         ~a msgPolicy       (Y:PolicySet)        = false [variant] .
  eq nic-out         (X:LabelSet)         ~a nextNPN         (Y:Nat)              = false [variant] .
  eq nic-out         (X:LabelSet)         ~a handledCurrently(Y:Message?)         = false [variant] .
  eq nic-out         (X:LabelSet)         ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq nic-out         (X:LabelSet)         ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq nic-out         (X:LabelSet)         ~a displayedTopBar (Y:Label)            = false [variant] .
  eq nic-out         (X:LabelSet)         ~a displayedContent(Y:Label)            = false [variant] .
  eq nic-out         (X:LabelSet)         ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq msgPolicy       (X:PolicySet)        ~a nextNPN         (Y:Nat)              = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a handledCurrently(Y:Message?)         = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a displayedTopBar (Y:Label)            = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a displayedContent(Y:Label)            = false [variant] .
  eq msgPolicy       (X:PolicySet)        ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq nextNPN         (X:Nat)              ~a handledCurrently(Y:Message?)         = false [variant] .
  eq nextNPN         (X:Nat)              ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq nextNPN         (X:Nat)              ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq nextNPN         (X:Nat)              ~a displayedTopBar (Y:Label)            = false [variant] .
  eq nextNPN         (X:Nat)              ~a displayedContent(Y:Label)            = false [variant] .
  eq nextNPN         (X:Nat)              ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq handledCurrently(X:Message?)         ~a weblabels       (Y:WebProcInfoSet)   = false [variant] .
  eq handledCurrently(X:Message?)         ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq handledCurrently(X:Message?)         ~a displayedTopBar (Y:Label)            = false [variant] .
  eq handledCurrently(X:Message?)         ~a displayedContent(Y:Label)            = false [variant] .
  eq handledCurrently(X:Message?)         ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq weblabels       (X:WebProcInfoSet)   ~a netlabels       (Y:NetProcInfoSet)   = false [variant] .
  eq weblabels       (X:WebProcInfoSet)   ~a displayedTopBar (Y:Label)            = false [variant] .
  eq weblabels       (X:WebProcInfoSet)   ~a displayedContent(Y:Label)            = false [variant] .
  eq weblabels       (X:WebProcInfoSet)   ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq netlabels       (X:NetProcInfoSet)   ~a displayedTopBar (Y:Label)            = false [variant] .
  eq netlabels       (X:NetProcInfoSet)   ~a displayedContent(Y:Label)            = false [variant] .
  eq netlabels       (X:NetProcInfoSet)   ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq displayedTopBar (X:Label)            ~a displayedContent(Y:Label)            = false [variant] .
  eq displayedTopBar (X:Label)            ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  eq displayedContent(X:Label)            ~a activeWebapp    (Y:MaybeConcWebProcId)        = false [variant] .

  sort LabelPair MaybeLabelPair MaybeLabel+Pair MaybeMaybeLabel+Pair .
  subsort LabelPair < MaybeLabelPair  < MaybeMaybeLabel+Pair .
  subsort LabelPair < MaybeLabel+Pair < MaybeMaybeLabel+Pair .
  op nopair  :                       -> MaybeLabelPair       [ctor metadata "89"] .
  op ((_,_)) : Label Label           -> LabelPair            [ctor metadata "90"] .
  op ((_,_)) : MaybeLabel MaybeLabel -> MaybeMaybeLabel+Pair [ctor metadata "90"] .

  var L1 L2 : Label .

  op inlbl : MaybeLabelPair -> MaybeLabel [metadata "92"] .
  eq inlbl((L1,L2))  = L1      [variant] .
  eq inlbl(nopair)   = nolabel [variant] .

  op outlbl : MaybeLabelPair -> MaybeLabel [metadata "93"] .
  eq outlbl((L1,L2)) = L2      [variant] .
  eq outlbl(nopair)  = nolabel [variant] .
endfm

load mfe.maude
(select tool SCC .)
(scc IBOS-PREDS-SCC .)
